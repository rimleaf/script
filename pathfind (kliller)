--// Services
local Players = game:GetService("Players")
local PathfindingService = game:GetService("PathfindingService")

--// Player
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HRP = Character:WaitForChild("HumanoidRootPart")

--// Config
local FOLLOW_ENABLED = false
local CurrentTarget = nil
local Path = nil
local WaypointIndex = 0

--// UI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PathfindGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 120, 0, 40)
toggleButton.Position = UDim2.new(0, 20, 0, 200)
toggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextSize = 18
toggleButton.Text = "Start Follow"
toggleButton.Parent = screenGui

--// Dragging logic
local dragging = false
local dragInput, dragStart, startPos
local UserInputService = game:GetService("UserInputService")

local function update(input)
	local delta = input.Position - dragStart
	toggleButton.Position = UDim2.new(
		startPos.X.Scale, startPos.X.Offset + delta.X,
		startPos.Y.Scale, startPos.Y.Offset + delta.Y
	)
end

toggleButton.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = toggleButton.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

toggleButton.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

--// Helper: find nearest player
local function getNearestPlayer()
	local closestPlayer = nil
	local closestDist = math.huge

	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
			local dist = (HRP.Position - plr.Character.HumanoidRootPart.Position).Magnitude
			if dist < closestDist then
				closestDist = dist
				closestPlayer = plr
			end
		end
	end
	return closestPlayer
end

--// Helper: create path
local function createPathToTarget(target)
	if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then return nil end
	local targetPos = target.Character.HumanoidRootPart.Position
	local path = PathfindingService:CreatePath({
		AgentRadius = 2,
		AgentHeight = 5,
		AgentCanJump = true,
		AgentJumpHeight = Humanoid.JumpHeight,
		AgentMaxSlope = Humanoid.MaxSlopeAngle
	})
	path:ComputeAsync(HRP.Position, targetPos)
	if path.Status == Enum.PathStatus.Success then
		return path
	end
	return nil
end

--// Move along path once
local function followPath(path)
	local waypoints = path:GetWaypoints()
	WaypointIndex = 0

	local function moveToNext()
		WaypointIndex += 1
		if WaypointIndex <= #waypoints and FOLLOW_ENABLED then
			local waypoint = waypoints[WaypointIndex]
			Humanoid:MoveTo(waypoint.Position)
			if waypoint.Action == Enum.PathWaypointAction.Jump then
				Humanoid.Jump = true
			end
		end
	end

	moveToNext()
	Humanoid.MoveToFinished:Connect(function(reached)
		if reached and FOLLOW_ENABLED then
			moveToNext()
		end
	end)
end

--// Button logic
toggleButton.MouseButton1Click:Connect(function()
	if dragging then return end -- donâ€™t toggle when just dragging

	FOLLOW_ENABLED = not FOLLOW_ENABLED
	if FOLLOW_ENABLED then
		toggleButton.Text = "Stop Follow"
		CurrentTarget = getNearestPlayer()
		if CurrentTarget then
			Path = createPathToTarget(CurrentTarget)
			if Path then
				followPath(Path)
			end
		end
	else
		toggleButton.Text = "Start Follow"
		CurrentTarget = nil
		Humanoid:MoveTo(HRP.Position) -- stop moving
	end
end)
