local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local lp = Players.LocalPlayer

-- MASTER TOGGLE UI
local masterGui = Instance.new("ScreenGui")
masterGui.Name = "MasterToggleGui"
masterGui.ResetOnSpawn = false
masterGui.Parent = lp:WaitForChild("PlayerGui")

local masterToggle = Instance.new("TextButton")
masterToggle.Size = UDim2.new(0, 120, 0, 30)
masterToggle.Position = UDim2.new(0, 10, 0, 10)
masterToggle.BackgroundColor3 = Color3.fromRGB(120, 40, 40)
masterToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
masterToggle.Font = Enum.Font.SourceSansBold
masterToggle.TextSize = 18
masterToggle.Text = "Backstab GUI: OFF"
masterToggle.Parent = masterGui

local masterEnabled = false

-- Toggle main system
masterToggle.MouseButton1Click:Connect(function()
	masterEnabled = not masterEnabled
	masterToggle.Text = "Backstab GUI: " .. (masterEnabled and "ON" or "OFF")
	masterToggle.BackgroundColor3 = masterEnabled and Color3.fromRGB(40, 120, 40) or Color3.fromRGB(120, 40, 40)

	if masterEnabled then
		if not _G.BackstabScriptLoaded then
			_G.BackstabScriptLoaded = true

			-- === Secondary UI (Backstab GUI) ===
			local screenGui = Instance.new("ScreenGui")
			screenGui.Name = "BackstabToggleGui"
			screenGui.ResetOnSpawn = false
			screenGui.Parent = lp.PlayerGui

			local toggleButton = Instance.new("TextButton")
			toggleButton.Size = UDim2.new(0, 150, 0, 40)
			toggleButton.Position = UDim2.new(0, 10, 0, 50)
			toggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
			toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
			toggleButton.Font = Enum.Font.SourceSansBold
			toggleButton.TextSize = 20
			toggleButton.Text = "Backstab: OFF"
			toggleButton.Parent = screenGui

			local rangeLabel = Instance.new("TextLabel")
			rangeLabel.Size = UDim2.new(0, 150, 0, 20)
			rangeLabel.Position = UDim2.new(0, 10, 0, 95)
			rangeLabel.BackgroundTransparency = 1
			rangeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			rangeLabel.Font = Enum.Font.SourceSans
			rangeLabel.TextSize = 16
			rangeLabel.Text = "Range:"
			rangeLabel.Parent = screenGui

			local rangeBox = Instance.new("TextBox")
			rangeBox.Size = UDim2.new(0, 150, 0, 25)
			rangeBox.Position = UDim2.new(0, 10, 0, 115)
			rangeBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			rangeBox.TextColor3 = Color3.fromRGB(255, 255, 255)
			rangeBox.Font = Enum.Font.SourceSans
			rangeBox.TextSize = 16
			rangeBox.PlaceholderText = "Enter range (1 - 10)"
			rangeBox.Text = "4"
			rangeBox.ClearTextOnFocus = false
			rangeBox.Parent = screenGui

			local modeButton = Instance.new("TextButton")
			modeButton.Size = UDim2.new(0, 150, 0, 25)
			modeButton.Position = UDim2.new(0, 10, 0, 145)
			modeButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
			modeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
			modeButton.Font = Enum.Font.SourceSans
			modeButton.TextSize = 16
			modeButton.Text = "Mode: Behind"
			modeButton.Parent = screenGui

			-- Vars
			local enabled = false
			local cooldown = false
			local lastTarget = nil
			local range = 4
			local killerNames = { "Jason", "c00lkidd", "JohnDoe", "1x1x1x1", "Noli" }
			local killersFolder = workspace:WaitForChild("Players"):WaitForChild("Killers")
			local mode = "Behind"

			-- Toggle button
			toggleButton.MouseButton1Click:Connect(function()
				enabled = not enabled
				toggleButton.Text = "Backstab: " .. (enabled and "ON" or "OFF")
				toggleButton.BackgroundColor3 = enabled and Color3.fromRGB(50, 150, 50) or Color3.fromRGB(30, 30, 30)
			end)

			-- Range box
			rangeBox.FocusLost:Connect(function()
				local input = tonumber(rangeBox.Text)
				if input and input >= 1 and input <= 10 then
					range = input
				else
					rangeBox.Text = tostring(range)
				end
			end)

			-- Mode button
			modeButton.MouseButton1Click:Connect(function()
				mode = (mode == "Behind" and "Around" or "Behind")
				modeButton.Text = "Mode: " .. mode
			end)

			-- Helpers
			local function isBehindTarget(hrp, targetHRP)
				local distance = (hrp.Position - targetHRP.Position).Magnitude
				if distance > range then return false end
				if mode == "Around" then return true end
				local direction = -targetHRP.CFrame.LookVector
				local toPlayer = (hrp.Position - targetHRP.Position)
				return toPlayer:Dot(direction) > 0.5
			end

local function isDaggerReady()
    local daggerBtn = lp.PlayerGui:FindFirstChild("MainUI")
        and lp.PlayerGui.MainUI:FindFirstChild("AbilityContainer")
        and lp.PlayerGui.MainUI.AbilityContainer:FindFirstChild("Dagger")
    if not daggerBtn then return false end

    local cooldownLabel = daggerBtn:FindFirstChild("CooldownTime")
    if cooldownLabel and cooldownLabel.Text ~= "" then
        return false -- still cooling down
    end

    return true -- button exists and no cooldown text
end


			local function activateDagger()
				local daggerBtn = lp.PlayerGui:FindFirstChild("MainUI")
					and lp.PlayerGui.MainUI:FindFirstChild("AbilityContainer")
					and lp.PlayerGui.MainUI.AbilityContainer:FindFirstChild("Dagger")
				if not daggerBtn then return end

				pcall(function() daggerBtn:Activate() end)
				if typeof(getconnections) == "function" then
					for _, conn in ipairs(getconnections(daggerBtn.MouseButton1Click)) do
						pcall(function()
							if conn.Function then conn.Function()
							elseif conn.func then conn.func()
							elseif conn.Fire then conn.Fire() end
						end)
					end
				end
			end

			-- Main loop
			RunService.Heartbeat:Connect(function()
				if not masterEnabled or not enabled or cooldown then return end

				local char = lp.Character
				if not (char and char:FindFirstChild("HumanoidRootPart")) then return end
				local hrp = char.HumanoidRootPart

				for _, name in ipairs(killerNames) do
					local killer = killersFolder:FindFirstChild(name)
					if killer and killer:FindFirstChild("HumanoidRootPart") then
						local kHRP = killer.HumanoidRootPart

						if isBehindTarget(hrp, kHRP) and killer ~= lastTarget then
							cooldown = true
							lastTarget = killer

							local start = tick()
							local didDagger = false

							local connection
							connection = RunService.Heartbeat:Connect(function()
								if not (char and char.Parent and kHRP and kHRP.Parent) then
									if connection then connection:Disconnect() end
									return
								end
								if tick() - start >= 0.5 then
									if connection then connection:Disconnect() end
									return
								end

								-- constant TP behind killer
								local behindPos = kHRP.Position - (kHRP.CFrame.LookVector * 0.3)
								hrp.CFrame = CFrame.new(behindPos, behindPos + kHRP.CFrame.LookVector)

								if not didDagger then
									didDagger = true
									if isDaggerReady() then
										activateDagger()
									end
								end
							end)

							-- reset cooldown after leaving
							task.delay(2, function()
								RunService.Heartbeat:Wait()
								while isBehindTarget(hrp, kHRP) do
									RunService.Heartbeat:Wait()
								end
								lastTarget = nil
								cooldown = false
							end)

							break
						end
					end
				end
			end)
		end
	else
		-- Turn everything OFF
		local gui = lp.PlayerGui:FindFirstChild("BackstabToggleGui")
		if gui then gui.Enabled = false end
	end
end)
