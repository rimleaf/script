loadstring(game:HttpGet("https://raw.githubusercontent.com/skibidi399/Chance-aimbot/refs/heads/main/Chance%20aimbot%20v2"))()
wait(0.1)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local lp = Players.LocalPlayer

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BackstabToggleGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = lp:WaitForChild("PlayerGui")

-- Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 150, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 20
toggleButton.Text = "Backstab: OFF"
toggleButton.Parent = screenGui

-- Range Label
local rangeLabel = Instance.new("TextLabel")
rangeLabel.Size = UDim2.new(0, 150, 0, 20)
rangeLabel.Position = UDim2.new(0, 10, 0, 55)
rangeLabel.BackgroundTransparency = 1
rangeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
rangeLabel.Font = Enum.Font.SourceSans
rangeLabel.TextSize = 16
rangeLabel.Text = "Range:"
rangeLabel.Parent = screenGui

-- TextBox for Range Input
local rangeBox = Instance.new("TextBox")
rangeBox.Size = UDim2.new(0, 150, 0, 25)
rangeBox.Position = UDim2.new(0, 10, 0, 75)
rangeBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
rangeBox.TextColor3 = Color3.fromRGB(255, 255, 255)
rangeBox.Font = Enum.Font.SourceSans
rangeBox.TextSize = 16
rangeBox.PlaceholderText = "Enter range (1 - 10)"
rangeBox.Text = "4"
rangeBox.ClearTextOnFocus = false
rangeBox.Parent = screenGui

-- Vars
local enabled = false
local cooldown = false
local lastTarget = nil
local range = 4
local killerNames = { "Jason", "c00lkidd", "JohnDoe", "1x1x1x1", "Noli" }
local killersFolder = workspace:WaitForChild("Players"):WaitForChild("Killers")

-- GUI toggle
toggleButton.MouseButton1Click:Connect(function()
	enabled = not enabled
	toggleButton.Text = "Backstab: " .. (enabled and "ON" or "OFF")
	toggleButton.BackgroundColor3 = enabled and Color3.fromRGB(50, 150, 50) or Color3.fromRGB(30, 30, 30)
end)

-- TextBox Range Handling
rangeBox.FocusLost:Connect(function()
	local input = tonumber(rangeBox.Text)
	if input and input >= 1 and input <= 10 then
		range = input
	else
		rangeBox.Text = tostring(range) -- Revert to last valid value
	end
end)

-- Mode Toggle
local mode = "Behind"
local modeButton = Instance.new("TextButton")
modeButton.Size = UDim2.new(0, 150, 0, 25)
modeButton.Position = UDim2.new(0, 10, 0, 105)
modeButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
modeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
modeButton.Font = Enum.Font.SourceSans
modeButton.TextSize = 16
modeButton.Text = "Mode: Behind"
modeButton.Parent = screenGui

modeButton.MouseButton1Click:Connect(function()
	if mode == "Behind" then
		mode = "Around"
	else
		mode = "Behind"
	end
	modeButton.Text = "Mode: " .. mode
end)

-- Helper: check if player is behind a target
local function isBehindTarget(hrp, targetHRP)
	local distance = (hrp.Position - targetHRP.Position).Magnitude
	if distance > range then
		return false
	end
	
	if mode == "Around" then
		return true
	else
		local direction = -targetHRP.CFrame.LookVector
		local toPlayer = (hrp.Position - targetHRP.Position)
		return toPlayer:Dot(direction) > 0.5
	end
end

-- Helper: simulate pressing the Dagger GUI button
local function activateDagger()
	local daggerBtn = lp:FindFirstChild("PlayerGui")
		and lp.PlayerGui:FindFirstChild("MainUI")
		and lp.PlayerGui.MainUI:FindFirstChild("AbilityContainer")
		and lp.PlayerGui.MainUI.AbilityContainer:FindFirstChild("Dagger")

	if daggerBtn then
		-- Try Activate()
		pcall(function() daggerBtn:Activate() end)

		-- Try getconnections if available
		if typeof(getconnections) == "function" then
			for _, conn in ipairs(getconnections(daggerBtn.MouseButton1Click)) do
				pcall(function()
					if conn.Function then
						conn.Function()
					elseif conn.func then
						conn.func()
					elseif conn.Fire then
						conn.Fire()
					end
				end)
			end
		end
	end
end

local function isDaggerReady()
    local daggerBtn = lp:FindFirstChild("PlayerGui")
        and lp.PlayerGui:FindFirstChild("MainUI")
        and lp.PlayerGui.MainUI:FindFirstChild("AbilityContainer")
        and lp.PlayerGui.MainUI.AbilityContainer:FindFirstChild("Dagger")

    if not daggerBtn then return false end

    -- Try CooldownTime first
    local cooldownLabel = daggerBtn:FindFirstChild("CooldownTime")
    if cooldownLabel and cooldownLabel:IsA("TextLabel") then
        if cooldownLabel.Text ~= "" then
            return false
        end
    end

    -- Try Charges (if dagger works like punch)
    local charges = daggerBtn:FindFirstChild("Charges")
    if charges and charges:IsA("TextLabel") then
        local num = tonumber(charges.Text)
        if not num or num < 1 then
            return false
        end
    end

    return true
end

-- Main loop
RunService.Heartbeat:Connect(function()
	if not enabled or cooldown then return end

	local char = lp.Character
	if not (char and char:FindFirstChild("HumanoidRootPart")) then return end
	local hrp = char.HumanoidRootPart

	for _, name in ipairs(killerNames) do
		local killer = killersFolder:FindFirstChild(name)
		if killer and killer:FindFirstChild("HumanoidRootPart") then
			local kHRP = killer.HumanoidRootPart

			if isBehindTarget(hrp, kHRP) and killer ~= lastTarget then
				cooldown = true
				lastTarget = killer

				-- Begin sum secs constant teleporting behind killer
				local start = tick()
				local didDagger = false

				local connection
				connection = RunService.Heartbeat:Connect(function()
					if not (char and char.Parent and kHRP and kHRP.Parent) then
						if connection then connection:Disconnect() end
						return
					end
					local elapsed = tick() - start
					if elapsed >= 0.5 then
						if connection then connection:Disconnect() end
						return
					end

					-- Constant TP behind killer
					local behindPos = kHRP.Position - (kHRP.CFrame.LookVector * 3)
					hrp.CFrame = CFrame.new(behindPos, behindPos + kHRP.CFrame.LookVector)

					-- Align look direction & use dagger (once at start)
					if not didDagger then
						didDagger = true

						-- Align to killer’s facing
						local faceStart = tick()
						local faceConn
						faceConn = RunService.Heartbeat:Connect(function()
							if tick() - faceStart >= 0.7 or not kHRP or not kHRP.Parent then
								if faceConn then faceConn:Disconnect() end
								return
							end
							hrp.CFrame = CFrame.new(hrp.Position, hrp.Position + kHRP.CFrame.LookVector)
						end)

						-- ✅ Dagger via GUI button instead of FireServer
                        wait(0.07)
						if isDaggerReady() then
							activateDagger()
						end
					end
				end)

				-- Wait and reset cooldown after leaving range
				task.delay(2, function()
					RunService.Heartbeat:Wait()
					while isBehindTarget(hrp, kHRP) do
						RunService.Heartbeat:Wait()
					end
					lastTarget = nil
					cooldown = false
				end)

				break
			end
		end
	end
end)

wait(0.2)
local Lighting = game:GetService("Lighting")
local Players = game:GetService("Players")

local LocalPlayer = Players.LocalPlayer

--// Config
local BrightnessValue = 2
local TimeOfDayValue = "12:00:00" -- Noon
local FogEndValue = 1e6
local GlobalShadowsValue = false
local MaxZoomValue = 100 -- change this to whatever max zoom you want

--// Function to enforce lighting
local function enforceSettings()
    Lighting.Brightness = BrightnessValue
    Lighting.TimeOfDay = TimeOfDayValue
    Lighting.FogEnd = FogEndValue
    Lighting.GlobalShadows = GlobalShadowsValue

    -- If Atmosphere exists, override its settings too
    local atmosphere = Lighting:FindFirstChildOfClass("Atmosphere")
    if atmosphere then
        atmosphere.Haze = 0
        atmosphere.Density = 0
    end
end

--// Function to enforce zoom
local function enforceZoom()
    if LocalPlayer and LocalPlayer.CameraMaxZoomDistance ~= MaxZoomValue then
        LocalPlayer.CameraMaxZoomDistance = MaxZoomValue
    end
end

-- Initial enforcement
enforceSettings()
enforceZoom()

-- Keep lighting consistent
Lighting:GetPropertyChangedSignal("Brightness"):Connect(enforceSettings)
Lighting:GetPropertyChangedSignal("TimeOfDay"):Connect(enforceSettings)
Lighting:GetPropertyChangedSignal("FogEnd"):Connect(enforceSettings)
Lighting:GetPropertyChangedSignal("GlobalShadows"):Connect(enforceSettings)
Lighting.ChildAdded:Connect(function(child)
    if child:IsA("Atmosphere") then
        enforceSettings()
    end
end)

-- Keep zoom consistent
LocalPlayer:GetPropertyChangedSignal("CameraMaxZoomDistance"):Connect(enforceZoom)

